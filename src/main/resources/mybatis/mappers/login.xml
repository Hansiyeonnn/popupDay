<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="flower.popupday.login.dao.LoginDAO">
    <!-- user_tbl -->
    <resultMap type="LoginDTO" id="LogResult">
        <result property="id" column="id"/>
        <result property="user_id" column="user_id"/>
        <result property="user_nickname" column="user_nickname"/>
        <result property="name" column="name"/>
        <result property="pwd" column="pwd"/>
        <result property="email" column="email"/>
        <result property="reg_date" column="reg_date"/>
        <result property="business_num" column="business_num"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
        <result property="birth_date" column="birth_date"/>
        <result property="gender" column="gender"/>
        <result property="tot_point" column="tot_point"/>
    </resultMap>

    <resultMap id="LoginHashTagResult" type="flower.popupday.login.dto.LoginHashTagDTO">
        <result property="user_hash_tag_id" column="user_hash_tag_id"/>
        <result property="user_id" column="user_id"/>
        <result property="hash_tag_id" column="hash_tag_id"/>
        <result property="hash_tag" column="hash_tag"/>
        <result property="count" column="count"/>
    </resultMap>

    <!-- sql문 중복 제거 -->
    <sql id="sr">
        <![CDATA[
        select * from user_tbl
        ]]>
    </sql>

    <insert id="insertLogin" parameterType="loginDTO" useGeneratedKeys="true" keyProperty="id">
        <!-- 값 다 추가한뒤에 넣을것 [회원가입 포인트 추가] -->
        <![CDATA[
        INSERT INTO user_tbl(user_id, user_nickname, name, pwd, email, reg_date, role, birth_date, gender)
        VALUES(#{user_id}, #{user_nickname}, #{name}, #{pwd}, #{email}, NOW(), '일반', '1990-01-01', 'M');

        ]]>
    </insert>
<!--    <insert id="insertJoinPoint" parameterType="loginDTO">-->
<!--        insert into point_history_tbl(user_id,change_amount,point_type,new_point)-->
<!--        values(#{id},+100,'회원가입',100,now())-->
<!--    </insert>-->
<!--    <update id="createReviewPoint" parameterType="loginDTO">-->
<!--        update user_tbl set tot_point = (select new_point from point_history_tbl where user_id = '#{id}' ORDER BY point_date DESC LIMIT 1) where id = #{id};-->
<!--    </update>-->

    <insert id="busniessLogin" parameterType="loginDTO">
        <![CDATA[
        insert into user_tbl
        values(#{id}, #{user_id}, #{user_nickname}, #{name}, #{pwd}, #{email}, now(), #{business_num}, '사업자', 'active')
        ]]>
    </insert>

    <select id="memberLoginCheck" parameterType="loginDTO" resultType="loginDTO">
        <include refid="sr"/>
        <where>
            user_id=#{user_id} and pwd=#{pwd}
        </where>
    </select>

    <!-- 아이디 중복 확인 쿼리 -->
    <select id="checkId" parameterType="String" resultType="boolean">
        <![CDATA[
        select count(*) > 0
        from user_tbl
        where user_id = #{user_id}
        ]]>
    </select>

    <!-- 이메일 중복 확인 쿼리 -->
    <select id="checkEmail" parameterType="String" resultType="boolean">
        <![CDATA[
        select count(*) > 0
        from user_tbl
        where email = #{email}
        ]]>
    </select>

    <!-- 닉네임 중복 확인 쿼리 -->
    <select id="checknickname" parameterType="String" resultType="boolean">
        <![CDATA[
        select count(*) > 0
        from user_tbl
        where user_nickname = #{user_nickname}
        ]]>
    </select>

    <!-- 회원 탈퇴 확인 -->
    <select id="getStatus" parameterType="String" resultType="String">
        select status
        from user_tbl
        where user_id = #{user_id}
    </select>

    <!-- 카카오 REST API -->
    <insert id="kakaoInsert" parameterType="LoginDTO">
        insert into user_tbl (id, user_id, user_nickname, name, pwd, email, reg_date, business_num, role, status)
        values (#{id}, #{email}, #{user_nickname}, #{user_nickname}, null, #{email}, now(), null, '카카오', 'active')
    </insert>

    <select id="isExistKakao" parameterType="LoginDTO" resultType="boolean">
        select if(count(*)=1, 'true','false') as result from user_tbl where user_id = #{email}
    </select>

    <update id="kakaoUpdate" parameterType="LoginDTO">
        update user_tbl set user_id=#{email}, user_nickname=#{user_nickname} where user_id=#{email}
    </update>
  
    <select id="getAccessToken" parameterType="String" resultType="String">
        SELECT access_token FROM user_tbl WHERE user_id=#{email}
    </select>

    <update id="delAccessToken" parameterType="String">
        UPDATE user_tbl SET access_token=null WHERE user_id=#{email}
    </update>


    <!-- 해시태그 조회 완-->
    <select id="hashtagList" resultType="flower.popupday.login.dto.LoginHashTagDTO">
      <![CDATA[
        SELECT
            ht.hash_tag, ht.hash_tag_id,
            COUNT(pht.hash_tag_id) AS count
        FROM hash_tag_tbl ht
            JOIN popup_hash_tag_tbl pht
        ON ht.hash_tag_id = pht.hash_tag_id
        GROUP BY ht.hash_tag;
        ]]>
    </select>

    <!-- 해시태그 저장 -->
    <insert id="inserthashtag" parameterType="flower.popupday.login.dto.LoginHashTagDTO">
        INSERT INTO user_hash_tag_tbl (user_id, hash_tag_id)
        VALUES (#{id}, #{hash_tag_id})
    </insert>

    <!-- 회원가입 해시태그 삽입 쿼리 -->
    <insert id="insertUserhashtag" parameterType="LoginHashTagDTO">
        INSERT INTO user_hash_tag_tbl (user_id, hash_tag_id)
        VALUES (#{user_id}, #{hash_tag_id})
    </insert>



</mapper>
