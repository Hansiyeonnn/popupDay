<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="flower.popupday.mypage.dao.MyDAO">

    <resultMap type="myDTO" id="memResult" >
        <result property="id" column="id"/>
        <result property="user_id" column="user_id"/>
        <result property="user_nikname" column="user_nikname"/>
        <result property="name" column="name"/>
        <result property="pwd" column="pwd"/>
        <result property="email" column="email"/>
        <result property="reg_date" column="reg_date"/>
        <result property="business_num" column="business_num"/>
        <result property="role" column="role"/>
        <result property="status" column="status"/>
    </resultMap>

    <resultMap type="myreviewDTO" id="revResult">
        <result property="review_id" column="review_id"/>
        <result property="user_id" column="user_id"/>
        <result property="review_title" column="review_title"/>
        <result property="review_content" column="review_content"/>
        <result property="date" column="date"/>
        <result property="writer" column="writer"/>
        <result property="created_date" column="created_date"/>
    </resultMap>

    <resultMap type="myqnaDTO" id="qnaResult">
        <result property="qna_id" column="qna_id"/>
        <result property="user_id" column="user_id"/>
        <result property="title" column="title"/>
        <result property="content" column="content"/>
        <result property="created_date" column="created_date"/>
        <result property="answer" column="answer"/>
        <result property="answer_date" column="answer_date"/>
        <result property="status" column="status"/>
    </resultMap>

    <!-- 로그인한 회원 정보 가져오기 -->
    <select id="getName" parameterType="myDTO">
        select * from user_tbl where id=#{id}
    </select>

    <!--    <select id="selectAllReview" resultMap="revResult">-->
    <!--        select count(*) from review_tbl where user_id='123'-->
    <!--    </select>-->

    <!-- 리뷰 개수 -->
    <select id="getReviewCount" resultType="Long" parameterType="Long">
        select count(*) from review_tbl join user_tbl on review_tbl.user_id = user_tbl.id
        where review_tbl.user_id=#{user_id} group by review_tbl.user_id
    </select>

    <!-- 댓글 개수 -->
    <select id="getreCommentCount" parameterType="String" resultType="String">
        <!--        select count(*) from review_comment join review_tbl on review_comment.review_id = review_tbl.review_id-->
        <!--        where review_comment.review_id=#{review_id} and review_comment.writed=#{writed} group by review_tbl.user_id-->
        select count(*) from review_comment_tbl where user_id=#{id}

        <!--        SELECT-->
        <!--        COALESCE(SUM(a.comment_count), 0) AS total_comments_a,-->
        <!--        COALESCE(SUM(b.comment_count), 0) AS total_comments_b,-->
        <!--        COALESCE(SUM(a.comment_count), 0) + COALESCE(SUM(b.comment_count), 0) AS total_comments_combined-->
        <!--        FROM-->
        <!--        (SELECT member_id, COUNT(*) AS comment_count FROM a_comments GROUP BY member_id) AS a-->
        <!--        FULL JOIN-->
        <!--        (SELECT member_id, COUNT(*) AS comment_count FROM b_comments GROUP BY member_id) AS b-->
        <!--        ON-->
        <!--        a.member_id = b.member_id-->
        <!--        WHERE-->
        <!--        a.member_id = 'your_member_id';-->
    </select>

    <!-- 팝업 댓글 개수 -->
    <select id="getpopCommentCount" parameterType="String" resultType="String">
        select count(*) from popup_comment_tbl where user_id=#{id}
    </select>

    <!-- 문의 개수 -->
    <select id="getQnaCount" parameterType="Long" resultType="Long">
        select count(*) from qna_tbl join user_tbl on qna_tbl.user_id = user_tbl.id
        where qna_tbl.user_id=#{user_id} group by qna_tbl.user_id
    </select>

    <!-- 아이디로 멤버 조회 -->
    <select id="selectMemberById" parameterType="Long" resultType="myDTO">
        select * from user_tbl where id=#{id}
    </select>

    <!-- 회원 정보 업데이트 -->
    <update id="updateLogin" parameterType="loginDTO">
        update user_tbl set user_nikname=#{user_nikname}, name=#{name}, email=#{email} where id=#{id}
    </update>

    <!-- 이메일 중복 확인 -->
    <select id="checkEmail" parameterType="String" resultType="boolean">
        select count(*) > 0 from user_tbl where email = #{email}
    </select>

    <!-- 닉네임 중복 확인 -->
    <select id="checkNikname" parameterType="String" resultType="boolean">
        select count(*) > 0 from user_tbl where user_nikname=#{user_nikname}
    </select>

    <!-- 비밀번호 변경 -->
    <update id="updatePwd" parameterType="loginDTO">
        update user_tbl set pwd=#{pwd} where id=#{id}
    </update>

    <update id="dropMember" parameterType="loginDTO">
        update user_tbl set status='deleted' where id=#{id}
    </update>

    <!-- 작성한 팝업 정보 가져오기 -->
<!--    <select id="getPopup" parameterType="String" resultType="popupDTO">-->
<!--        select * from popup_tbl where user_id=#{user_id}-->
<!--    </select>-->

    <!-- 작성된 팝업 개수 -->
<!--    <select id="getPopupCount" resultType="Long" parameterType="Long">-->
<!--        select count(*) from popup_tbl where user_id=#{id}-->
<!--    </select>-->

    <!-- soft delete? -->
    <update id="delMember" parameterType="Long">
        update user_tbl set status='deleted' where id=#{id}
    </update>

</mapper>